c
quit
match_data.names
match_data
n
exit
@pattern.match(req.path).names
@pattern.match(req.path)
@pattern
@pattern.class
c
@pattern.names
@pattern.match("cat")
@pattern.match("c")
@pattern.match("val")
@pattern.match("key")
@pattern.match("id")
@pattern("id")
req.params
req
route_params
@pattern
@pattern.match("bar")
@pattern.match("foo")
@pattern.match("cat")
@pattern.match("cats")
@pattern.match("user")
@pattern.match("user)
@pattern.class
@pattern.match
@pattern.match("u")
@pattern.match("user")
@pattern.match("users")
@pattern.match("/users/")
@pattern.match("/users/42")
@pattern.match("")
@pattern.source
@pattern.to_s
match_data = regex.match(@pattern.to_s)
@pattern
@pattern.match
@pattern
match_data = regex.match(@pattern)
n
q
n
regex = Regexp.new '/users/(?<name>\d+)'
q
@pattern
@controller_class
regex = Regexp.new '?(?<key>\d+)=(?<val>\d+)'
c
n
c
q
Object.instance_eval(&proc)
proc.instance_eval
proc.call
proc
router.instance_eval(proc).to_s
router.instance_eval(routes)
router.instance_eval(proc)
router.instance_eval(&proc)
router.instance_eval
c
n
router
q
req
Router.new.instance_eval(&proc)
proc
instance_eval(&proc)
@controller_class.new
@controller_class
c
s
cookie
n
q
n
q
req
@clean_cookie
c
@clean_cookie
c
n
req
req.cookies["_rails_lite_app"]
@clean_cookie
q
cookie
JSON.parse(cookie)
n
q
n
cookie
n
q
req.cookies["_rails_lite_app"].
req.cookies["_rails_lite_app"]
req.cookies
req
q
template.result(binding)
template.result
template
q
template
c
n
q
template
dir
q
dir
q
dir
path
q
path
pathj
q
self.class
path
q
path
q
path
q
path
q
path
q
path
q
path
c
__FILE__
controller_name
file_name
q
c
n
c
n
